apiVersion: v1
kind: Namespace
metadata:
  name: central-order-book-poc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: central-order-book-poc
  namespace: central-order-book-poc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: central-order-book-poc-app
  template:
    metadata:
      labels:
        app: central-order-book-poc-app       
    spec:
      containers:
        - name: central-order-book-poc-container          
          image: 'p01d15204503001.azurecr.io/central-order-book-poc:latest'
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP 

---

apiVersion: v1
kind: Service
metadata:
  name: central-order-book-poc-service
  namespace: central-order-book-poc  
spec:  
  # type: ClusterIP
  # type: LoadBalancer
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: central-order-book-poc-app

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: central-order-book-poc-ingress
  annotations:              
    kubernetes.io/ingress.class: private
    # nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /    
  namespace: central-order-book-poc
spec:  
  rules:    
  -  host: central-order-book-poc.p01d15204506001.c01.dev.provides.io
     http:
        paths:
        - path: /
          backend:
            serviceName: central-order-book-poc-service
            servicePort: 80
